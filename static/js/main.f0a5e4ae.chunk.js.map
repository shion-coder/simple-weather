{"version":3,"sources":["redux/weather/weather.selectors.js","redux/weather/weather.actions.js","redux/theme/theme.selectors.js","components/loader/loader.styles.js","components/loader/loader.component.jsx","redux/weather/weather.types.js","config/i18n.js","redux/create-reducer.js","redux/dimensions/dimensions.reducer.js","redux/dimensions/dimensions.types.js","redux/theme/theme.reducer.js","redux/theme/theme.types.js","redux/languages/languages.reducer.js","redux/languages/languages.types.js","redux/weather/weather.reducer.js","redux/root-reducer.js","api/api.js","redux/weather/weather.sagas.js","redux/root-saga.js","redux/store.js","config/theme.jsx","redux/languages/languages.selectors.js","components/header/header.styles.js","components/header/header.component.jsx","redux/languages/languages.actions.js","components/error-message/error-message.styles.js","components/error-message/error-message.component.jsx","containers/app/app.styles.js","containers/app/app.container.jsx","redux/dimensions/dimensions.actions.js","utils/styles/global-styles.js","config/root.jsx","index.jsx","config/consts.js"],"names":["weatherSelector","state","weather","selectWeatherLoading","createSelector","loading","selectWeatherLoaded","loaded","selectWeatherCurrent","currentWeather","selectWeatherIsError","isError","selectWeatherError","error","fetchWeather","cityCode","history","type","FETCH_WEATHER_TRIGGER","clearErrorMessage","CLEAR_ERROR_MESSAGE","selectThemeColor","theme","color","bounce","keyframes","fade","Container","styled","div","Spinner","Bounce","delay","Text","mapStateToProps","createStructuredSelector","connect","text","useState","setLoading","useEffect","timer","setTimeout","LOADER_DELAY","clearTimeout","FETCH_WEATHER_REQUEST","FETCH_WEATHER_SUCCESS","FETCH_WEATHER_FAILURE","i18n","use","Backend","initReactI18next","init","backend","loadPath","lng","fallbackLng","ns","defaultNS","debug","interpolation","escapeValue","react","wait","useSuspense","createReducer","initialState","reducer","payload","Object","prototype","hasOwnProperty","call","dimensionsReducer","width","window","innerWidth","height","innerHeight","themeReducer","languagesReducer","language","weatherReducer","persistConfig","storage","key","whitelist","combineReducers","dimensions","languages","rootReducer","persistReducer","axiosRetry","axios","retryDelay","exponentialDelay","makeWeatherRequest","id","a","get","CURRENT_WEATHER_URL","params","APPID","WEATHER_API_KEY","units","timeout","FETCH_TIMEOUT","data","weatherStart","source","CancelToken","put","push","response","message","request","code","cancelled","cancel","getWeatherTrigger","takeLatest","weatherSaga","all","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","enhancer","compose","applyMiddleware","store","createStore","persistor","persistStore","run","Theme","children","selectLanguage","Title","StyledFormControl","FormControl","StyledRadioGroup","RadioGroup","setLanguage","useHistory","location","useLocation","useTranslation","t","disabled","pathname","AppBar","position","Toolbar","IconButton","onClick","goBack","component","name","value","onChange","event","target","changeLanguage","FormControlLabel","control","Radio","label","StyledSnackbarContent","SnackbarContent","Message","span","StyledErrorIcon","ErrorIcon","StyledCloseIcon","CloseIcon","errorMessage","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","action","Wrapper","HeaderContainer","StyledPaper","Paper","SelectForm","lazy","CurrentWeather","setDimensions","handleResize","debounce","addEventListener","removeEventListener","fallback","exact","path","fadeIn","GlobalStyles","createGlobalStyle","normalize","Root","basename","process","StylesProvider","injectFirst","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0a5e4ae.chunk.js","sourcesContent":["import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst weatherSelector = state => state.weather;\n\nexport const selectWeatherLoading = createSelector([weatherSelector], weather => weather.loading);\n\nexport const selectWeatherLoaded = createSelector([weatherSelector], weather => weather.loaded);\n\nexport const selectWeatherCurrent = createSelector([weatherSelector], weather => weather.currentWeather);\n\nexport const selectWeatherIsError = createSelector([weatherSelector], weather => weather.isError);\n\nexport const selectWeatherError = createSelector([weatherSelector], weather => weather.error);\n","import { FETCH_WEATHER_TRIGGER, CLEAR_ERROR_MESSAGE } from './weather.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const fetchWeather = (cityCode, history) => ({\n  type: FETCH_WEATHER_TRIGGER,\n  cityCode,\n  history,\n});\n\nexport const clearErrorMessage = () => ({\n  type: CLEAR_ERROR_MESSAGE,\n});\n","import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst themeSelector = state => state.theme;\n\nexport const selectThemeColor = createSelector([themeSelector], theme => theme.color);\n","import styled, { keyframes } from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nconst bounce = keyframes`\n  0%,\n\n  100% {\n    transform: scale(0);\n    -webkit-transform: scale(0);\n  }\n\n  50% {\n    transform: scale(1);\n    -webkit-transform: scale(1);\n  }\n`;\n\nconst fade = keyframes`\n  0%,\n\n  100% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.5;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const Spinner = styled.div`\n  position: relative;\n  width: 40px;\n  height: 40px;\n  margin: 20px auto 10px auto;\n`;\n\nexport const Bounce = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #00c3b3;\n  border-radius: 50%;\n  opacity: 0.6;\n  animation: ${bounce} 2s ${({ delay }) => delay || null} infinite ease-in-out;\n`;\n\nexport const Text = styled.div`\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 1rem;\n  font-size: 0.875rem;\n  font-weight: 300;\n  letter-spacing: 0.2rem;\n  color: ${({ theme }) => (theme === 'dark' ? '#f7f8f9' : '#181818')};\n  animation: ${fade} 1.25s ease-in-out 0.25s infinite;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectThemeColor } from 'redux/theme/theme.selectors';\n\nimport { LOADER_DELAY } from 'config/consts';\n\nimport { Container, Spinner, Bounce, Text } from './loader.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  theme: selectThemeColor,\n});\n\nconst Loader = ({ theme, text }) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoading(true), LOADER_DELAY);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, []);\n\n  return loading ? (\n    <Container>\n      <Spinner>\n        <Bounce />\n        <Bounce delay=\"-1s\" />\n      </Spinner>\n\n      {text && <Text theme={theme}>{text}</Text>}\n    </Container>\n  ) : null;\n};\n\n/* -------------------------------------------------------------------------- */\n\nLoader.propTypes = {\n  theme: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default connect(mapStateToProps)(Loader);\n","export const FETCH_WEATHER_TRIGGER = 'FETCH_WEATHER_TRIGGER';\n\nexport const FETCH_WEATHER_REQUEST = 'FETCH_WEATHER_REQUEST';\n\nexport const FETCH_WEATHER_SUCCESS = 'FETCH_WEATHER_SUCCESS';\n\nexport const FETCH_WEATHER_FAILURE = 'FETCH_WEATHER_FAILURE';\n\nexport const CLEAR_ERROR_MESSAGE = 'CLEAR_ERROR_MESSAGE';\n","import i18n from 'i18next';\nimport Backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\n/* -------------------------------------------------------------------------- */\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: 'translations/locales/{{lng}}/{{ns}}.json',\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n    ns: ['translations'],\n    defaultNS: 'translations',\n    debug: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    react: {\n      wait: true,\n      useSuspense: false,\n    },\n  });\n","export const createReducer = (initialState, reducer) => (state = initialState, { type, payload }) => {\n  return Object.prototype.hasOwnProperty.call(reducer, type)\n    ? typeof reducer[type] === 'function'\n      ? reducer[type](state, payload)\n      : reducer[type]\n    : state;\n};\n","import { createReducer } from 'redux/create-reducer';\n\nimport { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n};\n\nconst reducer = {\n  [SET_DIMENSIONS]: (state, { width, height }) => ({ ...state, width, height }),\n};\n\nexport const dimensionsReducer = createReducer(initialState, reducer);\n","export const SET_DIMENSIONS = 'SET_DIMENSIONS';\n","import { createReducer } from 'redux/create-reducer';\n\nimport { TOGGLE_THEME } from './theme.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  color: 'light',\n};\n\nconst reducer = {\n  [TOGGLE_THEME]: state => ({ ...state, color: state.color === 'light' ? 'dark' : 'light' }),\n};\n\nexport const themeReducer = createReducer(initialState, reducer);\n","export const TOGGLE_THEME = 'TOGGLE_THEME';\n","import { createReducer } from 'redux/create-reducer';\n\nimport { CHANGE_LANGUAGE } from './languages.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  language: 'en',\n};\n\nconst reducer = {\n  [CHANGE_LANGUAGE]: (state, payload) => ({ ...state, language: payload }),\n};\n\nexport const languagesReducer = createReducer(initialState, reducer);\n","export const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE';\n","import { createReducer } from 'redux/create-reducer';\n\nimport {\n  FETCH_WEATHER_REQUEST,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE,\n  CLEAR_ERROR_MESSAGE,\n} from './weather.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst initialState = {\n  loading: false,\n  loaded: false,\n  cityCode: '',\n  currentWeather: {},\n  isError: false,\n  error: {},\n};\n\nconst reducer = {\n  [FETCH_WEATHER_REQUEST]: (state, payload) => ({\n    ...state,\n    loading: true,\n    loaded: false,\n    cityCode: payload,\n    currentWeather: {},\n    isError: false,\n    error: {},\n  }),\n  [FETCH_WEATHER_SUCCESS]: (state, payload) => ({ ...state, loading: false, loaded: true, currentWeather: payload }),\n  [FETCH_WEATHER_FAILURE]: (state, payload) => ({ ...state, loading: false, isError: true, error: payload }),\n  [CLEAR_ERROR_MESSAGE]: state => ({ ...state, isError: false }),\n};\n\nexport const weatherReducer = createReducer(initialState, reducer);\n","import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { dimensionsReducer } from 'redux/dimensions/dimensions.reducer';\nimport { themeReducer } from 'redux/theme/theme.reducer';\nimport { languagesReducer } from 'redux/languages/languages.reducer';\nimport { weatherReducer } from 'redux/weather/weather.reducer';\n\n/* -------------------------------------------------------------------------- */\n\nconst persistConfig = {\n  storage,\n  key: 'root',\n  whitelist: ['theme'],\n};\n\nconst reducer = combineReducers({\n  dimensions: dimensionsReducer,\n  theme: themeReducer,\n  languages: languagesReducer,\n  weather: weatherReducer,\n});\n\nexport const rootReducer = persistReducer(persistConfig, reducer);\n","import axios from 'axios';\nimport axiosRetry from 'axios-retry';\n\nimport { CURRENT_WEATHER_URL, WEATHER_API_KEY, FETCH_TIMEOUT } from 'config/consts';\n\n/* -------------------------------------------------------------------------- */\n\n// Exponential back-off retry delay between requests\naxiosRetry(axios, { retryDelay: axiosRetry.exponentialDelay });\n\nexport const makeWeatherRequest = async id => {\n  const { data } = await axios.get(CURRENT_WEATHER_URL, {\n    params: {\n      APPID: WEATHER_API_KEY,\n      units: 'metric',\n      id,\n    },\n    timeout: FETCH_TIMEOUT,\n  });\n\n  return data;\n};\n","import { takeLatest, all, call, put, cancelled } from 'redux-saga/effects';\n\nimport { CancelToken } from 'axios';\n\nimport { makeWeatherRequest } from 'api/api';\n\nimport {\n  FETCH_WEATHER_TRIGGER,\n  FETCH_WEATHER_REQUEST,\n  FETCH_WEATHER_SUCCESS,\n  FETCH_WEATHER_FAILURE,\n} from './weather.types';\n\n/* -------------------------------------------------------------------------- */\n\nconst weatherStart = function*({ cityCode, history }) {\n  const source = CancelToken.source();\n\n  yield put({ type: FETCH_WEATHER_REQUEST });\n\n  try {\n    const data = yield call(makeWeatherRequest, cityCode);\n\n    yield put({ type: FETCH_WEATHER_SUCCESS, payload: data });\n    yield call(history.push, '/current');\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      yield put({ type: FETCH_WEATHER_FAILURE, payload: { ...error, message: 'Response Error !' } });\n    } else if (error.request) {\n      // The request was made but no response was received\n      error.code === 'ECONNABORTED'\n        ? yield put({ type: FETCH_WEATHER_FAILURE, payload: { ...error, message: 'Network Timeout !' } })\n        : yield put({ type: FETCH_WEATHER_FAILURE, payload: { ...error, message: 'Network Error !' } });\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      yield put({ type: FETCH_WEATHER_FAILURE, payload: { ...error, message: 'Error!' } });\n    }\n  } finally {\n    if (yield cancelled()) {\n      source.cancel();\n    }\n  }\n};\n\nconst getWeatherTrigger = function*() {\n  yield takeLatest(FETCH_WEATHER_TRIGGER, weatherStart);\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport const weatherSaga = function*() {\n  yield all([call(getWeatherTrigger)]);\n};\n","import { all, call } from 'redux-saga/effects';\n\nimport { weatherSaga } from 'redux/weather/weather.sagas';\n\n/* -------------------------------------------------------------------------- */\n\nexport const rootSaga = function*() {\n  yield all([call(weatherSaga)]);\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\n\nimport { rootReducer } from 'redux/root-reducer';\nimport { rootSaga } from 'redux/root-saga';\n\n/* -------------------------------------------------------------------------- */\n\n// Setup redux-saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// List of middlewares\nconst middlewares = [sagaMiddleware];\n\n// Setup Redux DevTools only in development mode\nconst enhancer =\n  process.env.NODE_ENV === 'development'\n    ? composeWithDevTools(applyMiddleware(...middlewares))\n    : compose(applyMiddleware(...middlewares));\n\nexport const store = createStore(rootReducer, enhancer);\n\nexport const persistor = persistStore(store);\n\n// Run Redux Saga\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\n\nimport { ThemeProvider } from 'styled-components';\n\n/* -------------------------------------------------------------------------- */\n\nconst theme = {};\n\nconst Theme = ({ children }) => <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n\n/* -------------------------------------------------------------------------- */\n\nexport default Theme;\n","import { createSelector } from 'reselect';\n\n/* -------------------------------------------------------------------------- */\n\nconst languagesSelector = state => state.languages;\n\nexport const selectLanguage = createSelector([languagesSelector], languages => languages.language);\n","import styled from 'styled-components';\n\nimport { FormControl, RadioGroup } from '@material-ui/core';\n\n/* -------------------------------------------------------------------------- */\n\nexport const Title = styled.div`\n  margin-left: 8px;\n  font-weight: 400;\n  letter-spacing: 2px;\n`;\n\nexport const StyledFormControl = styled(FormControl)`\n  margin-left: auto;\n  margin-right: 30px;\n`;\n\nexport const StyledRadioGroup = styled(RadioGroup)`\n  display: flex;\n  flex-direction: row;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectLanguage } from 'redux/languages/languages.selectors';\nimport { setLanguage } from 'redux/languages/languages.actions';\n\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nimport { AppBar, Toolbar, IconButton, FormControlLabel, Radio } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\n\nimport { Title, StyledFormControl, StyledRadioGroup } from './header.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  language: selectLanguage,\n});\n\nconst Header = ({ language, setLanguage }) => {\n  const history = useHistory();\n  const location = useLocation();\n  const { t, i18n } = useTranslation();\n\n  const disabled = location.pathname === '/';\n\n  const handleChange = event => {\n    const language = event.target.value;\n    setLanguage(language);\n    i18n.changeLanguage(language);\n  };\n\n  return (\n    <AppBar position=\"static\" color=\"default\">\n      <Toolbar>\n        <IconButton disabled={disabled} onClick={() => history.goBack()}>\n          <ArrowBack />\n        </IconButton>\n\n        <Title>{t('app-title')}</Title>\n\n        <StyledFormControl component=\"fieldset\">\n          <StyledRadioGroup name=\"language\" value={language} onChange={handleChange}>\n            <FormControlLabel value=\"en\" control={<Radio color=\"default\" />} label=\"EN\" />\n            <FormControlLabel value=\"vi\" control={<Radio color=\"default\" />} label=\"VI\" />\n          </StyledRadioGroup>\n        </StyledFormControl>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nHeader.propTypes = {\n  language: PropTypes.string,\n  setLanguage: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, { setLanguage })(Header);\n","import { CHANGE_LANGUAGE } from './languages.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const setLanguage = language => ({\n  type: CHANGE_LANGUAGE,\n  payload: language,\n});\n","import styled from 'styled-components';\n\nimport { SnackbarContent } from '@material-ui/core';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport CloseIcon from '@material-ui/icons/Close';\n\n/* -------------------------------------------------------------------------- */\n\nexport const StyledSnackbarContent = styled(SnackbarContent)`\n  background-color: #d32f2f;\n`;\n\nexport const Message = styled.span`\n  display: flex;\n  align-items: center;\n`;\n\nexport const StyledErrorIcon = styled(ErrorIcon)`\n  font-size: 20px;\n  opacity: 0.9;\n  margin-right: 8px;\n`;\n\nexport const StyledCloseIcon = styled(CloseIcon)`\n  font-size: 20px;\n  opacity: 0.9;\n  margin-right: 8px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectWeatherIsError, selectWeatherError } from 'redux/weather/weather.selectors';\nimport { clearErrorMessage } from 'redux/weather/weather.actions';\n\nimport { Snackbar, IconButton } from '@material-ui/core';\n\nimport { StyledSnackbarContent, Message, StyledErrorIcon, StyledCloseIcon } from './error-message.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  isError: selectWeatherIsError,\n  error: selectWeatherError,\n});\n\nconst ErrorMessage = ({ isError, error, clearErrorMessage }) => {\n  const errorMessage = error.message || 'Something went wrong';\n\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'right',\n      }}\n      open={isError}\n      autoHideDuration={5000}\n      onClose={clearErrorMessage}\n    >\n      <StyledSnackbarContent\n        message={\n          <Message>\n            <StyledErrorIcon />\n            {errorMessage}\n          </Message>\n        }\n        action={[\n          <IconButton key=\"close\" color=\"inherit\" onClick={clearErrorMessage}>\n            <StyledCloseIcon />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nErrorMessage.propTypes = {\n  isError: PropTypes.bool,\n  error: PropTypes.object,\n  clearErrorMessage: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, { clearErrorMessage })(ErrorMessage);\n","import styled from 'styled-components';\n\nimport { Paper } from '@material-ui/core';\n\n/* -------------------------------------------------------------------------- */\n\nexport const Wrapper = styled.div`\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 48px;\n`;\n\nexport const HeaderContainer = styled.div`\n  height: 100px;\n`;\n\nexport const StyledPaper = styled(Paper)`\n  padding: 16px;\n  min-height: 120px;\n`;\n","import React, { useEffect, Suspense, lazy } from 'react';\nimport { PropTypes } from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { setDimensions } from 'redux/dimensions/dimensions.actions';\n\nimport { Route } from 'react-router-dom';\nimport { debounce } from 'lodash-es';\n\nimport Header from 'components/header/header.component';\nimport ErrorMessage from 'components/error-message/error-message.component';\nimport Loader from 'components/loader/loader.component';\n\nimport { Wrapper, HeaderContainer, StyledPaper } from './app.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst SelectForm = lazy(() => import('components/select-form/select-form.component'));\nconst CurrentWeather = lazy(() =>\n  import(/* webpackPrefetch: true */ 'components/current-weather/current-weather.component'),\n);\n\nconst App = ({ setDimensions }) => {\n  useEffect(() => {\n    const handleResize = debounce(() => {\n      setDimensions({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }, 1000);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [setDimensions]);\n\n  return (\n    <>\n      <Wrapper>\n        <HeaderContainer>\n          <Header />\n        </HeaderContainer>\n\n        <StyledPaper>\n          <Suspense fallback={<Loader />}>\n            <Route exact path=\"/\" component={SelectForm} />\n            <Route path=\"/current\" component={CurrentWeather} />\n          </Suspense>\n        </StyledPaper>\n\n        <ErrorMessage />\n      </Wrapper>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nApp.propTypes = {\n  setDimensions: PropTypes.func,\n};\n\nexport default connect(null, { setDimensions })(App);\n","import { SET_DIMENSIONS } from './dimensions.types';\n\n/* -------------------------------------------------------------------------- */\n\nexport const setDimensions = dimensions => ({\n  type: SET_DIMENSIONS,\n  payload: dimensions,\n});\n","import { createGlobalStyle, keyframes } from 'styled-components';\nimport { normalize } from 'styled-normalize';\n\n/* -------------------------------------------------------------------------- */\n\nconst fadeIn = keyframes`\n  from {\n      opacity: 0;\n  }\n\n  to {\n      opacity: 1;\n  }\n`;\n\nexport const GlobalStyles = createGlobalStyle`\n  ${normalize}\n\n  html {\n    box-sizing: border-box;\n    scroll-behavior: smooth;\n    background: transparent;\n    margin: 0;\n    padding: 0;\n  }\n\n  body {\n    font-family: sans-serif;\n    animation: ${fadeIn} 1s ease;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n","import React from 'react';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from 'redux/store';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { StylesProvider } from '@material-ui/core/styles';\n\nimport Theme from 'config/theme';\n\nimport App from 'containers/app/app.container';\n\nimport { GlobalStyles } from 'utils/styles/global-styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <Theme>\n        <GlobalStyles />\n\n        <Router basename={process.env.PUBLIC_URL}>\n          <StylesProvider injectFirst>\n            <App />\n          </StylesProvider>\n        </Router>\n      </Theme>\n    </PersistGate>\n  </Provider>\n);\n\n/* -------------------------------------------------------------------------- */\n\nexport default Root;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'config/i18n';\nimport Root from 'config/root';\n\n/* -------------------------------------------------------------------------- */\n\nReactDOM.render(<Root />, document.getElementById('root'));\n","export const CURRENT_WEATHER_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nexport const WEATHER_API_KEY = '0cfcdf45cac89814e88ce229ab3d5a0a';\n\nexport const LOADER_DELAY = 0;\n\nexport const FETCH_TIMEOUT = 10000;\n"],"sourceRoot":""}