{"version":3,"sources":["config/cities.js","components/city-selector/city-selector.styles.js","components/city-selector/city-selector.component.jsx","components/select-button/select-button.component.jsx","components/select-form/select-form.styles.js","components/select-form/select-form.component.jsx"],"names":["1581130","2643743","2950159","524901","2968815","360630","StyledSelect","styled","Select","CitySelector","field","t","useTranslation","renderItem","Object","entries","cities","map","code","name","MenuItem","key","value","SelectButton","Button","type","variant","color","startIcon","StyledFormControl","FormControl","mapStateToProps","createStructuredSelector","loading","selectWeatherLoading","connect","fetchWeather","history","initialValues","city","onSubmit","Grid","container","spacing","justify","alignItems","item","component"],"mappings":"yNAAe,GACbA,QAAS,QACTC,QAAS,SACTC,QAAS,SACTC,OAAQ,SACRC,QAAS,QACTC,OAAQ,S,0HCAH,IAAMC,EAAeC,kBAAOC,IAAPD,CAAH,KCoBVE,EAdM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACdC,EAAMC,cAAND,EAEFE,EAAaC,OAAOC,QAAQC,GAAQC,KAAI,mCAAEC,EAAF,KAAQC,EAAR,YAC5C,kBAACC,EAAA,EAAD,CAAUC,IAAKH,EAAMI,MAAOJ,GACzBP,EAAEQ,OAIP,OAAO,kBAACb,EAAiBI,EAAQG,I,2BCApBU,EAZM,WAAO,IAClBZ,EAAMC,cAAND,EAER,OACE,kBAACa,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,WAAWC,MAAM,UAAUC,UAAW,kBAAC,IAAD,OACjEjB,EAAE,iB,0GCRF,IAAMkB,EAAoBtB,kBAAOuB,IAAPvB,CAAH,KCcxBwB,EAAkBC,YAAyB,CAC/CC,QAASC,MAoCIC,sBAAQJ,EAAiB,CAAEK,kBAA3BD,EAjCI,SAAC,GAAwC,IAAtCF,EAAqC,EAArCA,QAASG,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,QAK3C,OAAOJ,EACL,kBAAC,IAAD,MAEA,kBAAC,IAAD,CAAQK,cAAe,CAAEC,KAAM,WAAaC,SAPzB,SAAC,GAAc,IAAZD,EAAW,EAAXA,KACtBH,EAAaG,EAAMF,KAOjB,kBAAC,IAAD,KACE,kBAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,QAAQ,SAASC,WAAW,UACtD,kBAACJ,EAAA,EAAD,CAAMK,MAAI,GACR,kBAACjB,EAAD,KACE,kBAAC,IAAD,CAAOV,KAAK,OAAO4B,UAAWtC,MAGlC,kBAACgC,EAAA,EAAD,CAAMK,MAAI,GACR,kBAAC,EAAD","file":"static/js/6.edd8a32c.chunk.js","sourcesContent":["export default {\n  1581130: 'Hanoi',\n  2643743: 'London',\n  2950159: 'Berlin',\n  524901: 'Moscow',\n  2968815: 'Paris',\n  360630: 'Cairo',\n};\n","import styled from 'styled-components';\n\nimport { Select } from '@material-ui/core';\n\n/* -------------------------------------------------------------------------- */\n\nexport const StyledSelect = styled(Select)`\n  width: 200px;\n`;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport cities from 'config/cities';\n\nimport { MenuItem } from '@material-ui/core';\n\nimport { StyledSelect } from './city-selector.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst CitySelector = ({ field }) => {\n  const { t } = useTranslation();\n\n  const renderItem = Object.entries(cities).map(([code, name]) => (\n    <MenuItem key={code} value={code}>\n      {t(name)}\n    </MenuItem>\n  ));\n\n  return <StyledSelect {...field}>{renderItem}</StyledSelect>;\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport default CitySelector;\n","import React from 'react';\n\nimport { useTranslation } from 'react-i18next';\n\nimport { Button } from '@material-ui/core';\nimport Send from '@material-ui/icons/Send';\n\n/* -------------------------------------------------------------------------- */\n\nconst SelectButton = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Button type=\"submit\" variant=\"outlined\" color=\"primary\" startIcon={<Send />}>\n      {t('get-weather')}\n    </Button>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport default SelectButton;\n","import styled from 'styled-components';\n\nimport { FormControl } from '@material-ui/core';\n\n/* -------------------------------------------------------------------------- */\n\nexport const StyledFormControl = styled(FormControl)`\n  margin: 32px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectWeatherLoading } from 'redux/weather/weather.selectors';\nimport { fetchWeather } from 'redux/weather/weather.actions';\n\nimport { Formik, Field, Form } from 'formik';\n\nimport { Grid } from '@material-ui/core';\n\nimport CitySelector from 'components/city-selector/city-selector.component';\nimport SelectButton from 'components/select-button/select-button.component';\nimport Loader from 'components/loader/loader.component';\n\nimport { StyledFormControl } from './select-form.styles';\n\n/* -------------------------------------------------------------------------- */\n\nconst mapStateToProps = createStructuredSelector({\n  loading: selectWeatherLoading,\n});\n\nconst SelectForm = ({ loading, fetchWeather, history }) => {\n  const handleSubmit = ({ city }) => {\n    fetchWeather(city, history);\n  };\n\n  return loading ? (\n    <Loader />\n  ) : (\n    <Formik initialValues={{ city: '1581130' }} onSubmit={handleSubmit}>\n      <Form>\n        <Grid container spacing={3} justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <StyledFormControl>\n              <Field name=\"city\" component={CitySelector} />\n            </StyledFormControl>\n          </Grid>\n          <Grid item>\n            <SelectButton />\n          </Grid>\n        </Grid>\n      </Form>\n    </Formik>\n  );\n};\n\n/* -------------------------------------------------------------------------- */\n\nSelectForm.propTypes = {\n  loading: PropTypes.bool,\n  fetchWeather: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default connect(mapStateToProps, { fetchWeather })(SelectForm);\n"],"sourceRoot":""}